package com.bank.controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.bank.dto.Stock;
import com.bank.service.StockService;

import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;

@RestController
@CrossOrigin(origins = "*")
@RequestMapping(value = "/mymarketplace")
public class StockController {

	@Autowired
	StockService stockServce;

	@ApiOperation(value = "returns all stocks", notes = "This service return all stock situated in the market")
	@GetMapping(value = "/stock", produces = MediaType.APPLICATION_JSON_VALUE)
	public List<Stock> getAllStocks() {
		return stocks;
	}

	@ApiOperation(value = "returns stocks using id", notes = "This service return stock using id situated in the market")
	@GetMapping(value = "/stock/{id}", produces = MediaType.APPLICATION_JSON_VALUE)
	public List<Stock> getAllStocks(
			@ApiParam(value = "Stock identifier", required = true) @PathVariable("id") int stockId) {
		for (Stock stock : stocks) {
			if (stock.getId() == stockId)
				return stocks;
		}
		return null;
	}

	@PostMapping(value = "/stock", consumes = { MediaType.APPLICATION_JSON_VALUE,
			MediaType.APPLICATION_XML_VALUE }, produces = { MediaType.APPLICATION_JSON_VALUE,
					MediaType.APPLICATION_XML_VALUE })

	public ResponseEntity<Stock> createNewStock(@RequestBody Stock stock,
			@RequestHeader("auth-token") String authToken) {
		System.out.println("authentication token " + authToken);
		if ("ZENSAR".equals(authToken)) {
			Stock stocks=
			return new ResponseEntity<Stock>(stock, HttpStatus.OK);
		}
		return new ResponseEntity<Stock>(HttpStatus.BAD_REQUEST);

	}

	static List<Stock> stocks = new ArrayList<>();

	static int lastStockId = 0;
}

package com.olx.controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RestController;

import com.olx.dto.UserDTO;

@RestController
public class UserController {

	static List<UserDTO> users = new ArrayList<>();
	static int lastStockId = 0;

	@PostMapping(value = "/user/authenticate", consumes = MediaType.APPLICATION_JSON_VALUE, produces = MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<String> authenticateUser(@RequestBody UserDTO userDTO,
			@RequestHeader("auth-token") String authToken) {
		if (("anand".equals(userDTO.getUserName()) && ("anand123".equals(userDTO.getPassword())))) {
			return new ResponseEntity<String>(authToken, HttpStatus.OK);
		}
		return new ResponseEntity<String>(HttpStatus.BAD_REQUEST);
	}

	@PostMapping(value = "/user", consumes = MediaType.APPLICATION_JSON_VALUE, produces = MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<UserDTO> registerUser(@RequestBody UserDTO userDTO) {
		lastStockId = lastStockId + 1;
		userDTO.setUserId(lastStockId);
		users.add(userDTO);
		return new ResponseEntity<UserDTO>(userDTO, HttpStatus.OK);
	}
	
	@GetMapping(value="/user")
	public ResponseEntity<List<UserDTO>> getuserDetail(@RequestHeader("auth-token") String authToken) {
		if("sanjay22".equals(authToken)) {
		return new ResponseEntity<List<UserDTO>>(users, HttpStatus.OK);
		}
		return new ResponseEntity<List<UserDTO>>(HttpStatus.BAD_REQUEST);
	}

}

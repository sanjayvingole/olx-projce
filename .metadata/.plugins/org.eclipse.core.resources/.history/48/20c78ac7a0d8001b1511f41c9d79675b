package com.olx.controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RestController;

import com.olx.dto.AdvertiseDTO;

@RestController
public class AdvertiseController {

	private static int id = 0;
	private List<AdvertiseDTO> advertiseDTOList = new ArrayList<>();

	@GetMapping(value = "/advertise")
	public ResponseEntity<List<AdvertiseDTO>> getAllAdevertise(@RequestHeader("auth-token") String authToken) {
		if ("sanjay22".equals(authToken)) {
			return new ResponseEntity<List<AdvertiseDTO>>(advertiseDTOList, HttpStatus.OK);
		}
		return new ResponseEntity<List<AdvertiseDTO>>(HttpStatus.BAD_REQUEST);
	}

	@PostMapping(value = "/advertise", consumes = { MediaType.APPLICATION_JSON_VALUE,
			MediaType.APPLICATION_XML_VALUE }, produces = { MediaType.APPLICATION_JSON_VALUE,
					MediaType.APPLICATION_XML_VALUE })
	public ResponseEntity<AdvertiseDTO> newAdvertise(@RequestBody AdvertiseDTO advertiseDTO,
			@RequestHeader("auth-token") String authToken) {
		id = id + 1;
		advertiseDTO.setId(id);
		advertiseDTOList.add(advertiseDTO);
		if ("sanjay22".equals(authToken)) {
			return new ResponseEntity<AdvertiseDTO>(advertiseDTO, HttpStatus.OK);
		}

		return new ResponseEntity<AdvertiseDTO>(HttpStatus.BAD_REQUEST);
	}

	@PutMapping(value = "/advertise/{id}", consumes = { MediaType.APPLICATION_JSON_VALUE,
			MediaType.APPLICATION_XML_VALUE }, produces = { MediaType.APPLICATION_JSON_VALUE,
					MediaType.APPLICATION_XML_VALUE })
	public ResponseEntity<AdvertiseDTO> updateAdvertise(@RequestBody AdvertiseDTO advertiseDTO,
			@PathVariable("id") Integer id, @RequestHeader("auth-token") String authToken) {
		id = id + 1;
		advertiseDTO.setId(id);
		advertiseDTOList.add(advertiseDTO);
		if ("sanjay22".equals(authToken)) {
			return new ResponseEntity<AdvertiseDTO>(advertiseDTO, HttpStatus.OK);
		}

		return new ResponseEntity<AdvertiseDTO>(HttpStatus.BAD_REQUEST);
	}
}
